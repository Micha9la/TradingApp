@using MudBlazor
@inject IDialogService DialogService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<MudDialog>
    <DialogContent>
        <h3>Send Trade Message</h3>
        <MudTextField @bind-Value="_messageText"
                      Label="Message Text"
                      Lines="10"
                      FullWidth="true"
                      Variant="Variant.Outlined"
                      Text="@_messageText" />
    </DialogContent>

    <DialogActions>
        <MudButton Onclick="SendWhatsApp" Variant="Variant.Filled" Style="background-color: green; color: black;" Size="Size.Small">WhatsApp</MudButton>
        <MudButton Onclick="SendEmail" Variant="Variant.Filled" Style="background-color: darkblue; color:white;" Size="Size.Small">Email</MudButton>
        <MudButton OnClick="SendSms"
                   Variant="Variant.Filled"
                   Style="background-color: orange; color: black;"
                   Size="Size.Small">
            SMS
        </MudButton>
        
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public string PrefilledMessage { get; set; } = string.Empty;    
    private string _messageText = string.Empty;
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;

    protected override void OnInitialized()
    {
        _messageText = PrefilledMessage;
    }

    private async Task SendWhatsApp()
    {
        var encoded = Uri.EscapeDataString(_messageText ?? string.Empty);
        var url = $"https://wa.me/?text={encoded}";
        // open new tab so the app stays open in the current tab
        await JS.InvokeVoidAsync("window.open", url, "_blank");
        // return a result and close the dialog
        //MudDialog.Close(DialogResult.Ok(new { Channel = "WhatsApp" }));
    }

    private async Task SendEmail()
    {
        var encodedSubject = Uri.EscapeDataString("Trade Offer");
        var encodedBody = Uri.EscapeDataString(_messageText ?? string.Empty);
        var url = $"mailto:?subject={encodedSubject}&body={encodedBody}";
        // open default mailto handler (in-app or system)
        // using Navigation.NavigateTo(mailto) works, but on some browsers JS might be prefered:
        Navigation.NavigateTo(url, forceLoad: true);
        // optionally wait a tick to ensure navigation started, then close the dialog
        await Task.Delay(200);
        //MudDialog.Close(DialogResult.Ok(new { Channel = "Email" }));
    }
   
    private async Task SendSms()
    {
        var encoded = Uri.EscapeDataString(_messageText ?? string.Empty);
        var url = $"sms:?body={encoded}";
        await JS.InvokeVoidAsync("window.open", url, "_blank");
        //MudDialog.Close(DialogResult.Ok(new { Channel = "SMS" }));
    }
}

