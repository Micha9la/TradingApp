@using MudBlazor
@inject NavigationManager NavigationManager

<MudNavMenu>

    <MudText Typo="Typo.h6" Class="px-4 py-2">TradingApp.BlazorUI</MudText>
    <MudDivider Class="mb-2" />

    <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">
        Home
    </MudNavLink>

    <MudNavLink Href="/landingpage" Icon="@Icons.Material.Filled.Map">
        Landing Page
    </MudNavLink>

    <MudNavLink Href="/auth" Icon="@Icons.Material.Filled.Lock">
        Auth Required
    </MudNavLink>

    <MudNavLink Href="/trades" Icon="@Icons.Material.Filled.List">
        Trades
    </MudNavLink>

    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="Account/Manage" Icon="@Icons.Material.Filled.AccountCircle">
                @context.User.Identity?.Name
            </MudNavLink>

            
        </Authorized>

        <NotAuthorized>
            <MudNavLink Href="Account/Register" Icon="@Icons.Material.Filled.PersonAdd">
                Register
            </MudNavLink>
            <MudNavLink Href="Account/Login" Icon="@Icons.Material.Filled.Login">
                Login
            </MudNavLink>
        </NotAuthorized>
    </AuthorizeView>

</MudNavMenu>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

